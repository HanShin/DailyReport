@{
    ViewBag.Title = "ProgressPipingLineList";
}

<div class="col-xs-10 col-md-10">
    <h3>PipeLineList Progress</h3>
       @(Html.Kendo().Chart<DailyReport.Models.ModelLineNumData>()
       //.ChartArea(chartArea => chartArea.Background("transparent")) 
       .Name("aLineListChart")
        .Title("Pipe Line List 작업량")
        .Legend(legend => legend.Visible(true).Position(ChartLegendPosition.Bottom))
        .DataSource(ds => ds.Read(read => read.Action("ProgressPipingLineList_Chart", "Chart"))
        )
            .CategoryAxis(axis => axis
                    .MajorGridLines(lines => lines.Visible(false))
                    .Categories(model=>model)
                )
        
                .Series(series =>
                {
                    series.Bar(model => model.Mpercentage).Name("모델").Spacing(1.5).Tooltip(tooltip => tooltip.Template("#=series.name #: #= dataItem.Mtotal # /  #= dataItem.Total #"));
                    series.Bar(model => model.Tpercentage).Name("전체").Tooltip(tooltip => tooltip.Template("#=series.name #: #= dataItem.Total # /  #= dataItem.Total #"));
                })
                
        
        .ValueAxis(axis => axis
            .Numeric()
            .Max(100)
            .Labels(labels => labels.Visible(true))
            .MajorUnit(10)

        )
        .Tooltip(tooltip => tooltip

            .Visible(true)
           .Format("")
        )
        .ChartArea(chart =>
        {
            chart.Height(400);
            chart.Width(900);
            chart.Margin(30);
        })
        
)
    @(Html.Kendo().Chart<DailyReport.Models.ModelLineNumData>()
    .Name("cLineListChart")
        .Title("Pipe Line List 작업량(협력사별)")
        .Legend(legend => legend.Visible(true).Position(ChartLegendPosition.Bottom))
        .DataSource(ds => ds.Read(read => read.Action("ProgressPipingLineList_Chart", "Chart"))
            //.Filter(filter => {filter.Add(item => item.Total);
            //    })
        )
                .Series(series =>
                {
                    series.Bar(model => model.Kpercentage).Name("경신").Spacing(1.0).Labels(true).Tooltip(tooltip => tooltip.Template("#=series.name #: #= dataItem.Kquantity # /  #= dataItem.Total #"));
                    series.Bar(model => model.Wpercentage).Name("우림").Spacing(1.0).Labels(true).Tooltip(tooltip => tooltip.Template("#=series.name #: #= dataItem.Wquantity # /  #= dataItem.Total #"));
                    series.Bar(model => model.Spercentage).Name("스페이스").Spacing(1.0).Labels(true).Tooltip(tooltip => tooltip.Template("#=series.name #: #= dataItem.Squantity # /  #= dataItem.Total #"));
                })
        
        .CategoryAxis(axis => axis
            .Categories(model => model)
            .MajorGridLines(lines => lines.Visible(false))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .Max(100)
            .Labels(labels => labels.Visible(true))
            .MajorUnit(10)
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            
        )
        .ChartArea(chart => { 
            chart.Height(420);
            chart.Width(900);
            chart.Margin(30);}) 
)
</div>
    

